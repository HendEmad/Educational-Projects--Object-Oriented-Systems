@startuml
package "Hospital System" {

    ' Independent Entities
    class Patient {
        + patientID: String
        + name: String
        + address: String
        + phone: String
        + medicalRecords: List<MedicalRecord>
    }

    class Doctor {
        + doctorID: String
        + name: String
        + specialization: String
        + schedule: List<Appointment>
    }

    class Appointment {
        + appointmentID: String
        + date: Date
        + time: Time
        + patient: Patient
        + doctor: Doctor
    }

    class Treatment {
        + treatmentID: String
        + description: String
        + patient: Patient
        + doctor: Doctor
        + date: Date
    }

    class Visitor {
        + visitorID: String
        + name: String
        + relation: String
        + patient: Patient
        + visitDate: Date
    }

    class Scan {
        + scanID: String
        + type: String
        + result: String
        + date: Date
    }

    class LabTest {
        + labTestID: String
        + type: String
        + result: String
        + date: Date
    }

    class Laboratory {
        + labID: String
        + name: String
        + tests: List<LabTest>
    }

    class MedicalOperation {
        + operationID: String
        + type: String
        + date: Date
    }

    class ICU {
        + icuID: String
        + admissionDate: Date
        + dischargeDate: Date
    }

    class Pharmacy {
        + pharmacyID: String
        + name: String
        + medications: List<Medication>
    }

    class Prescription {
        + prescriptionID: String
        + medication: Medication
        + dosage: String
        + date: Date
    }

    class Medication {
        + medicationID: String
        + name: String
        + type: String
        + pharmacy: Pharmacy
    }

    ' Chain of Responsibility
    abstract class HospitalSystemHandler{
        - nextHandler: Handler
        + setNextHandler(handler: CommandHandler)
        + handle(command: Command)
    }

    'relationship                          
    HospitalSystemHandler --* HospitalSystem

    interface Command {
        + execute()
    }

    class AdmitPatientCommand{
        + patient: Patient
        + execute()
    }
    class ScheduleAppointmentCommand{
        + appointment: Appointment
        + execute()
    }
    class RecordTreatmentCommand{
        + treatment: Treatment
        + execute()
    }
    class RegisterVisitorCommand{
        + visitor: Visitor
        + execute()
    }
    class PerformScanCommand{
        + scan: Scan
        + execute()
    }
    class ConductLabTestCommand{
        + labTest: LabTest
        + execute()
    }
    class OperateCommand{
        + operation: MedicalOperation
        + execute()
    }
    class ICUCommand{
        + icuRequest: ICU
        + execute()
    }
    class DispenseMedicationCommand {
        + prescription: Prescription
        + execute()
    }

    'Concrete handlers
    abstract class MedicalOperationHandler {
        - nextHandler: Handler
        + setNextHandler(handler: ConsultationHandler)
        + handle(command: Command)
    }
    
    class ConsultationHandler{
      + handle(command: Command)
    }
    
    class prepOpLabTest {
      + handle(command: Command)
    }
    
    class ScheduleORHandler {
      + handle(command: Command)
    }
    
    class DoctorHandler {
      + handle(command: Command)
    }
    
    class ICUHandler {
      + handle(command: Command)
    }
    
    class ReceptionistHandler {
      + handle(command: Command)
    }
    
    class PharmacyHandler {
      + handle(command: Command)
    }
    
    class ScanHandler {
      + handle(command: Command)
    }
    
    class LaboratoryHandler {
      + handle(command: Command)
    }

    ' Billing Handler
    class BillingHandler{
        + handle(command: Command)
    }

    ' Hospital System (Receiver)
    class HospitalSystem {
        + handleCommand(command: Command)
    }

    ' Relationships
    Patient "1" o-- "0..*" Appointment
    Doctor "1" o-- "0..*" Appointment
    Patient "1" o-- "0..*" Treatment
    Doctor "1" o-- "0..*" Treatment
    Patient "1" o-- "0..*" Visitor
    Patient "1" o-- "0..*" Scan
    Patient "1" o-- "0..*" LabTest
    Laboratory "1" o-- "0..*" LabTest
    Patient "1" o-- "0..*" MedicalOperation
    Doctor "1" o-- "0..*" MedicalOperation 
    Patient "1" o-- "0..1" ICU
    Patient "1" o-- "0..*" Prescription
    Doctor "1" o-- "0..*" Prescription
    Patient "1" o-- "0..*" Medication 
    Pharmacy "1" o-- "0..*" Medication
    Pharmacy "1" o-- "0..*" Prescription

    ' Command Handling Chain of Responsibility
    HospitalSystemHandler <|-- Command
    HospitalSystemHandler <|-- BillingHandler : next >
    
    Command <|-- AdmitPatientCommand
    Command <|-- ScheduleAppointmentCommand
    Command <|-- RecordTreatmentCommand
    Command <|-- RegisterVisitorCommand
    Command <|-- PerformScanCommand
    Command <|-- ConductLabTestCommand
    Command <|-- OperateCommand
    Command <|-- ICUCommand
    Command <|-- DispenseMedicationCommand

    'commands Handlers
    ReceptionistHandler --* AdmitPatientCommand
    ReceptionistHandler --* ScheduleAppointmentCommand
    ReceptionistHandler --* RegisterVisitorCommand                               
    DoctorHandler --* RecordTreatmentCommand
    PharmacyHandler --* DispenseMedicationCommand
    LaboratoryHandler --* ConductLabTestCommand
    ICUHandler --* ICUCommand
    ScanHandler --* PerformScanCommand
    MedicalOperationHandler --* OperateCommand
    MedicalOperationHandler <|-- ConsultationHandler
    MedicalOperationHandler <|-- prepOpLabTest
    MedicalOperationHandler <|-- ScheduleORHandler
    
    ' Entities with patient entity
    MedicalOperationHandler o-- Patient
    DoctorHandler o-- Patient
    ICUHandler o-- Patient
    ReceptionistHandler o-- Patient
    PharmacyHandler o-- Patient
    ScanHandler o-- Patient
    LaboratoryHandler o-- Patient

}
@enduml